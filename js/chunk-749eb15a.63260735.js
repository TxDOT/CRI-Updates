(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-749eb15a"],{"0f1d":function(e,t,i){"use strict";i.d(t,"a",(function(){return l}));var n=i("a4ee"),a=i("6a0e"),r=i("59b2"),s=(i("b50f"),i("c120"),i("cea0"),i("d386"));let o=class extends a["a"]{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};Object(n["a"])([Object(r["b"])()],o.prototype,"affectsPixelSize",null),Object(n["a"])([Object(r["b"])({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=Object(n["a"])([Object(s["a"])("esri.layers.support.rasterTransforms.BaseRasterTransform")],o);const l=o},"218c":function(e,t,i){"use strict";i.d(t,"a",(function(){return h})),i.d(t,"b",(function(){return p})),i.d(t,"c",(function(){return d})),i.d(t,"d",(function(){return c})),i.d(t,"e",(function(){return m})),i.d(t,"f",(function(){return u})),i.d(t,"g",(function(){return f})),i.d(t,"h",(function(){return b}));i("e06a");var n=i("b2b2");class a{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n=null){const a=this._cachedBlocks,r=e+"/"+t;if(a.has(r)){const e=a.get(r);e.ts=Date.now(),e.refCount++}else a.set(r,{block:i,ts:Date.now(),refCount:1,controller:n});this.trim(),this.updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this.clearTimer()},this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}}var r=i("b4e0"),s=i("4ae5");const o=new Map,l=new a;function c(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(o.has(e)){const t=o.get(e);return t.push(i),t.length-1}return o.set(e,[i]),0}function f(e,t){if(o.has(e)){const i=o.get(e);i[t]=null,i.some(e=>null!=e)||o.delete(e)}}function h(e,t,i){if(!o.has(e))return null==t?l.decreaseRefCount(e,i):0;const n=o.get(e);if(null==n[t])return l.decreaseRefCount(e,i);const a=n[t].cache;if(a.has(i)){const e=a.get(i);if(e.refCount--,0===e.refCount){a.delete(i);for(let e=0;e<n.length;e++)n[e]&&n[e].cache.has(i)&&n[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function d(e,t,i){if(!o.has(e))return null==t?l.getBlock(e,i):null;const n=o.get(e);if(null==n[t]){for(let e=0;e<n.length;e++)if(n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,t.block}return l.getBlock(e,i)}const a=n[t].cache;if(a.has(i)){const e=a.get(i);return e.refCount++,e.block}for(let r=0;r<n.length;r++)if(r!==t&&n[r]&&n[r]&&n[r].cache.has(i)){const e=n[r].cache.get(i);return e.refCount++,a.set(i,e),e.block}return null}function m(e,t,i,n,a=null){if(!o.has(e))return void(null==t&&l.putBlock(e,i,n,a));const r=o.get(e);if(null==r[t])return void l.putBlock(e,i,n,a);const s={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:a};n.then(()=>s.isResolved=!0).catch(()=>s.isRejected=!0),r[t].cache.set(i,s)}function p(e,t,i){if(!o.has(e))return void(null==t&&l.deleteBlock(e,i));const n=o.get(e);null!=n[t]?n[t].cache.delete(i):l.deleteBlock(e,i)}function y(e,t){if(!o.has(e))return null;const i=o.get(e);return null==i[t]?null:i[t]}function b(e,t,i,a,o,l,c=null){const u=y(e,t),f=u.extent,{cache:h,rasterInfo:d}=u;if(f&&f.xmin===i.xmin&&f.xmax===i.xmax&&f.ymin===i.ymin&&f.ymax===i.ymax)return;const m=i.clone().normalize(),{spatialReference:p,transform:b}=d,x=new Set;for(let y=0;y<m.length;y++){const e=m[y];if(e.xmax-e.xmin<=a||e.ymax-e.ymin<=a)continue;let t=Object(r["h"])(e,p,c);Object(n["l"])(b)&&(t=b.inverseTransform(t));const i=new s["a"]({x:a,y:a,spatialReference:e.spatialReference});if(null==o&&!(o=Object(r["j"])(i,p,e,c)))return;const{pyramidLevel:u,pyramidResolution:f,excessiveReading:h}=Object(r["m"])(o,d,l||"closest");if(h)return;const{storageInfo:g}=d,{origin:v}=g,O={x:Math.max(0,Math.floor((t.xmin-v.x)/f.x)),y:Math.max(0,Math.floor((v.y-t.ymax)/f.y))},w=Math.ceil((t.xmax-t.xmin)/f.x-.1),I=Math.ceil((t.ymax-t.ymin)/f.y-.1),j=u>0?g.pyramidBlockWidth:g.blockWidth,S=u>0?g.pyramidBlockHeight:g.blockHeight,T=1,R=Math.max(0,Math.floor(O.x/j)-T),_=Math.max(0,Math.floor(O.y/S)-T),C=Math.floor((O.x+w-1)/j)+T,M=Math.floor((O.y+I-1)/S)+T;for(let n=_;n<=M;n++)for(let e=R;e<=C;e++)x.add(`${u}/${n}/${e}`)}h.forEach((e,t)=>{if(!x.has(t)){const e=h.get(t);(null==e||e.isResolved||e.isRejected)&&h.delete(t)}}),u.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}},"773d":function(e,t,i){"use strict";i.d(t,"a",(function(){return c}));var n=i("a4ee"),a=i("59b2"),r=(i("b50f"),i("c120"),i("cea0"),i("448d")),s=i("d386"),o=i("0f1d");let l=class extends o["a"]{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};Object(n["a"])([Object(r["a"])({GCSShiftXform:"gcs-shift"})],l.prototype,"type",void 0),Object(n["a"])([Object(a["b"])()],l.prototype,"tolerance",void 0),l=Object(n["a"])([Object(s["a"])("esri.layers.support.rasterTransforms.GCSShiftTransform")],l);const c=l},"7fb1":function(e,t,i){"use strict";i.d(t,"a",(function(){return y}));var n=i("a4ee"),a=(i("e06a"),i("59b2")),r=(i("b50f"),i("c120"),i("cea0"),i("448d")),s=i("afcf"),o=i("d386"),l=i("09db"),c=i("0f1d"),u=i("4ae5"),f=i("3af1");function h(e,t,i){const{x:n,y:a}=t;if(i<2)return{x:e[0]+n*e[2]+a*e[4],y:e[1]+n*e[3]+a*e[5]};if(2===i){const t=n*n,i=a*a,r=n*a;return{x:e[0]+n*e[2]+a*e[4]+t*e[6]+r*e[8]+i*e[10],y:e[1]+n*e[3]+a*e[5]+t*e[7]+r*e[9]+i*e[11]}}const r=n*n,s=a*a,o=n*a,l=r*n,c=r*a,u=n*s,f=a*s;return{x:e[0]+n*e[2]+a*e[4]+r*e[6]+o*e[8]+s*e[10]+l*e[12]+c*e[14]+u*e[16]+f*e[18],y:e[1]+n*e[3]+a*e[5]+r*e[7]+o*e[9]+s*e[11]+l*e[13]+c*e[15]+u*e[17]+f*e[19]}}function d(e,t,i){const{xmin:n,ymin:a,xmax:r,ymax:s,spatialReference:o}=t;let l=[];if(i<2)l.push({x:n,y:s}),l.push({x:r,y:s}),l.push({x:n,y:a}),l.push({x:r,y:a});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:a+(s-a)*t/(e-1)}),l.push({x:r,y:a+(s-a)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(r-n)*t/e,y:a}),l.push({x:n+(r-n)*t/e,y:s})}l=l.map(t=>h(e,t,i));const c=l.map(e=>e.x),u=l.map(e=>e.y);return new f["a"]({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}function m(e){const[t,i,n,a,r,s]=e,o=n*s-r*a,l=r*a-n*s;return[(r*i-t*s)/o,(n*i-t*a)/l,s/o,a/l,-r/o,-n/l]}let p=class extends c["a"]{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const a=[];for(let r=0;r<i.length;r++)a.push(i[r]),a.push(n[r]);return a}writeForwardCoefficients(e,t,i){const n=[],a=[];for(let r=0;r<(null==e?void 0:e.length);r++)r%2==0?n.push(e[r]):a.push(e[r]);t.coeffX=n,t.coeffY=a}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=m(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const a=[];for(let r=0;r<i.length;r++)a.push(i[r]),a.push(n[r]);return a}writeInverseCoefficients(e,t,i){const n=[],a=[];for(let r=0;r<(null==e?void 0:e.length);r++)r%2==0?n.push(e[r]):a.push(e[r]);t.inverseCoeffX=n,t.inverseCoeffY=a}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=h(this.forwardCoefficients,e,this.polynomialOrder);return new u["a"]({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=h(this.inverseCoefficients,e,this.polynomialOrder);return new u["a"]({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.inverseCoefficients,e,this.polynomialOrder)}};Object(n["a"])([Object(a["b"])({json:{write:!0}})],p.prototype,"polynomialOrder",void 0),Object(n["a"])([Object(a["b"])()],p.prototype,"forwardCoefficients",void 0),Object(n["a"])([Object(s["a"])("forwardCoefficients",["coeffX","coeffY"])],p.prototype,"readForwardCoefficients",null),Object(n["a"])([Object(l["a"])("forwardCoefficients")],p.prototype,"writeForwardCoefficients",null),Object(n["a"])([Object(a["b"])({json:{write:!0}})],p.prototype,"inverseCoefficients",null),Object(n["a"])([Object(s["a"])("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],p.prototype,"readInverseCoefficients",null),Object(n["a"])([Object(l["a"])("inverseCoefficients")],p.prototype,"writeInverseCoefficients",null),Object(n["a"])([Object(a["b"])()],p.prototype,"affectsPixelSize",null),Object(n["a"])([Object(r["a"])({PolynomialXform:"polynomial"})],p.prototype,"type",void 0),p=Object(n["a"])([Object(o["a"])("esri.layers.support.rasterTransforms.PolynomialTransform")],p);const y=p},"8c6a":function(e,t,i){"use strict";i.d(t,"a",(function(){return d})),i.d(t,"b",(function(){return m}));var n=i("773d"),a=i("a4ee"),r=(i("e92d"),i("cea0"),i("b50f"),i("c120"),i("2dd4"),i("448d")),s=i("d386"),o=i("0f1d");let l=class extends o["a"]{constructor(){super(...arguments),this.type="identity"}};Object(a["a"])([Object(r["a"])({IdentityXform:"identity"})],l.prototype,"type",void 0),l=Object(a["a"])([Object(s["a"])("esri.layers.support.rasterTransforms.IdentityTransform")],l);const c=l;var u=i("7fb1");const f={GCSShiftXform:n["a"],IdentityXform:c,PolynomialXform:u["a"]},h=Object.keys(f);function d(e){const t=null==e?void 0:e.type;return!e||h.includes(t)}function m(e){if(!(null==e?void 0:e.type))return null;const t=f[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}},9651:function(e,t,i){"use strict";i.d(t,"a",(function(){return S}));var n,a=i("a4ee"),r=i("2eab"),s=i("fc29"),o=i("ce50"),l=i("9096"),c=i("e92d"),u=i("c24e"),f=i("8a44"),h=i("f4cc"),d=i("5815"),m=i("e041"),p=i("3795"),y=i("59b2"),b=i("b50f"),x=(i("c120"),i("1a3e")),g=i("d386"),v=i("7ffa");class O{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%8,a=i>>3,r=this._tileAvailabilityBitSet;return a<0||a>r.length?"unknown":r[a]&1<<n?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let n=!0,a=!0;const r=Math.ceil(t*i/8),s=new Uint8Array(r);let o=0;for(let l=0;l<e.length;l++){const t=l%8;e[l]?(a=!1,s[o]|=1<<t):n=!1,7===t&&++o}a?this._allAvailability="unavailable":n?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||r["default"],{row:n,col:a,width:s,height:l}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(I(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:n,left:a,width:s,height:l},valid:!0,data:Object(b["b"])(s*l,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==n||e.location.left!==a||e.location.width!==s||e.location.height!==l))throw new o["a"]("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:a,width:s,height:l}});return O.fromJSON(e)})}static fromJSON(e){O.validateJSON(e);const t=new O;return t.location=Object.freeze(Object(v["a"])(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new o["a"]("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o["a"]("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o["a"]("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o["a"]("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o["a"]("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function w(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}function I(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}const j=c["a"].getLogger("esri.layers.support.TilemapCache");let S=n=class extends(Object(l["b"])(s["a"])){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=r["default"],this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u["a"](this.cacheByteSize),this.handles.add([this.watch(["layer.parsedUrl","layer.tileServers?","layer.apiKey?","layer.customParameters?"],()=>this._initializeTilemapDefinition()),Object(p["a"])(this,"layer.tileInfo.lods",e=>this._initializeAvailableLevels(e),!0)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(j.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,n){if(!this._availableLevels[e])return Promise.reject(new o["a"]("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const a=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,a);if(r)return Promise.resolve(r);const s=n&&n.signal;return n={...n,signal:null},new Promise((e,t)=>{Object(h["p"])(s,()=>t(Object(h["d"])()));const i=w(a);let r=this._pendingTilemapRequests[i];if(!r){r=O.fromDefinition(a,n).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,n){return this._availableLevels[e]?this.fetchTilemap(e,t,i,n).catch(e=>e).then(n=>{if(n instanceof O){const a=n.getAvailability(t,i);return"unavailable"===a?Promise.reject(new o["a"]("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):a}if(Object(h["l"])(n))throw n;return"unknown"}):Promise.reject(new o["a"]("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,n,a){n.level=e,n.row=t,n.col=i;const r=this.layer.tileInfo;r.updateTileInfo(n);const s=this.fetchAvailability(e,t,i,a).catch(e=>{if(Object(h["l"])(e))throw e;if(r.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n);throw e});return this._fetchAvailabilityUpsamplePrefetch(n.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,a,r,s){if(!this._prefetchingEnabled)return;const o="prefetch-"+e;if(this.handles.has(o))return;const l=new AbortController;s.then(()=>l.abort(),()=>l.abort());let c=!1;const u={remove(){c||(c=!0,l.abort())}};if(this.handles.add(u,o),await Object(d["c"])(10,l.signal).catch(()=>{}),c||(c=!0,this.handles.remove(o)),Object(h["m"])(l))return;const f={id:e,level:t,row:i,col:a},m={...r,signal:l.signal},p=this.layer.tileInfo;for(let h=0;n._prefetches.length<n._maxPrefetch&&p.upsampleTile(f);++h){const e=this.fetchAvailability(f.level,f.row,f.col,m);n._prefetches.push(e);const t=()=>{n._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:n}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:Object(m["E"])({...t.query,...n,token:null!=i?i:null==(e=t.query)?void 0:e.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const a=w(n);return this._tilemapCache.get(a)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,n)=>!!e._tilemapFromCache(t,i,n,e._tmpTilemapDefinition)}}};S._maxPrefetch=4,S._prefetches=new f["a"]({initialSize:n._maxPrefetch}),Object(a["a"])([Object(y["b"])({constructOnly:!0,type:Number})],S.prototype,"levels",void 0),Object(a["a"])([Object(x["a"])("levels")],S.prototype,"castLevels",null),Object(a["a"])([Object(y["b"])({readOnly:!0,type:Number})],S.prototype,"size",null),Object(a["a"])([Object(y["b"])({constructOnly:!0,type:Number})],S.prototype,"cacheByteSize",void 0),Object(a["a"])([Object(y["b"])({constructOnly:!0})],S.prototype,"layer",void 0),Object(a["a"])([Object(y["b"])({constructOnly:!0})],S.prototype,"request",void 0),S=n=Object(a["a"])([Object(g["a"])("esri.layers.support.TilemapCache")],S)},9917:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return Ye}));var n=i("a4ee"),a=i("4856"),r=i("ba40"),s=i("ce50"),o=i("b2b2"),l=i("e694"),c=i("f4cc"),u=i("59b2"),f=(i("b50f"),i("c120"),i("cea0")),h=i("448d"),d=i("afcf"),m=i("d386"),p=i("a6a3"),y=i("997b"),b=i("8b28"),x=(i("e06a"),i("2eab")),g=i("e92d"),v=i("4adc"),O=i("7f83"),w=i("54b4"),I=i("22f4"),j=i("b627"),S=i("da6b"),T=i("dff3"),R=i("19db"),_=i("1ccd"),C=i("7220"),M=i("2616"),k=i("3af1"),P=i("5996");const F=g["a"].getLogger("esri.layers.mixins.ImageryTileMixin"),z=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set("url",Object(w["g"])(e,F))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if(Object(o["k"])(e))return null;const i=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:n},t):Object(R["a"])(e,n)}async createStreamlinesMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createStreamlinesMesh(e,t):Object(M["a"])(e.rendererSettings,e.flowData,Object(o["l"])(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if(Object(o["k"])(t))return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;!Object(o["k"])(i)&&i.length||(i=this._getDefaultSlice());const n=e.timeExtent||this.timeExtent;if(Object(o["l"])(i)&&Object(o["l"])(n)&&(Object(o["l"])(n.start)||Object(o["l"])(n.end))){var a,r;i=i.map(e=>e.clone());const s=null==(a=t.variables.find(({name:e})=>e===i[0].variableName))||null==(r=a.dimensions)?void 0:r.find(({name:e})=>"StdTime"===e),l=i.find(({dimensionName:e})=>"StdTime"===e);if(!s||!l)return{...e,multidimensionalDefinition:null};const{start:c,end:u}=n,f=Object(o["k"])(c)?null:c.getTime(),h=Object(o["k"])(u)?null:u.getTime(),d=null!=f?f:h,m=null!=h?h:f;if(Object(o["l"])(s.values)){const e=s.values.filter(e=>{if(Array.isArray(e)){if(d===m)return e[0]<=d&&e[1]>=d;const t=e[0]<=d&&e[1]>d||e[0]<m&&e[1]>=m,i=e[0]>=d&&e[1]<=m||e[0]<d&&e[1]>m;return t||i}return d===m?e===d:e>=d&&e<=m});if(e.length){const t=e.sort((e,t)=>{var i,n,a,r;return d===m?(null!=(a=e[0])?a:e)-(null!=(r=t[0])?r:t):Math.abs((null!=(i=e[1])?i:e)-m)-Math.abs((null!=(n=t[1])?n:t)-m)})[0];l.values=[t]}else i=null}else if(s.hasRegularIntervals&&s.extent){const[e,t]=s.extent;d>t||m<e?i=null:l.values=d===m?[d]:[Math.max(e,d),Math.min(t,m)]}}return{...e,multidimensionalDefinition:i}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=Object(_["e"])(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(Object(o["l"])(i)&&i.pixels&&i.pixels.length>0))return null;let n;await this.updateRenderer();const a=this._rasterJobHandler.instance,{bandIds:r}=this;return n=a?await a.symbolize({...e,simpleStretchParams:t,bandIds:r}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:r}),n}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded||Object(o["k"])(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const n=Object(O["e"])(e);return T["a"].create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,n={}){if(n.requestAsImageElement){const a=this.getTileUrl(e,t,i);return Object(x["default"])(a,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then(e=>e.data)}if(Object(o["l"])(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),Object(o["k"])(n.multidimensionalDefinition))){const a=n.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,a),pixelBlock:null}}return await this._initJobHandler(),"raster-shaded-relief"===this.renderer.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,n)}async fetchPixels(e,t,i,n={}){return Object(o["l"])(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),Object(o["k"])(n.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,i,n))}async identify(e,t={}){return Object(o["l"])(this.rasterInfo.multidimensionalInfo)&&(t=this.normalizeRasterFetchOptions(t),Object(o["k"])(t.multidimensionalDefinition))?{location:e,value:null}:this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!Object(o["l"])(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some(e=>e.name===i&&e.dimensions.some(e=>"StdTime"===e.name))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new S["a"];return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(_["c"])(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_getDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(!Object(o["l"])(e))return null;const t=e.variables[0];return t.dimensions.map(e=>{var i,n;return new j["a"]({variableName:t.name,dimensionName:e.name,values:[null!=(i=null==(n=e.values)?void 0:n[0])?i:e.extent[0]],isSlice:!0})})}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=Object(_["b"])(e)),this.renderer||(this.renderer=Object(_["a"])(e,{bandIds:this.bandIds,variableName:Object(o["l"])(this.multidimensionalDefinition)?null==(t=this.multidimensionalDefinition[0])?void 0:t.variableName:null})),this.symbolizer?(this.symbolizer.rendererJSON=Object(_["e"])(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new C["a"]({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const i=this.symbolizer.bind();i.success||F.warn("imagery-tile-mixin",i.error||"The given renderer is not supported by the layer.")}};return Object(n["a"])([Object(u["b"])()],t.prototype,"_cachedRendererJson",void 0),Object(n["a"])([Object(u["b"])()],t.prototype,"_compatibleFullExtent",void 0),Object(n["a"])([Object(u["b"])()],t.prototype,"_rasterJobHandler",void 0),Object(n["a"])([Object(u["b"])()],t.prototype,"bandIds",void 0),Object(n["a"])([Object(u["b"])()],t.prototype,"copyright",void 0),Object(n["a"])([Object(u["b"])({type:k["a"]}),Object(v["a"])("rasterInfo.extent")],t.prototype,"fullExtent",void 0),Object(n["a"])([Object(u["b"])()],t.prototype,"interpolation",void 0),Object(n["a"])([Object(u["b"])()],t.prototype,"ioConfig",void 0),Object(n["a"])([Object(u["b"])({type:[j["a"]]})],t.prototype,"multidimensionalDefinition",void 0),Object(n["a"])([Object(u["b"])()],t.prototype,"raster",void 0),Object(n["a"])([Object(u["b"])({readOnly:!0}),Object(v["a"])("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),Object(n["a"])([Object(u["b"])()],t.prototype,"sourceJSON",void 0),Object(n["a"])([Object(u["b"])({type:P["a"]}),Object(v["a"])("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),Object(n["a"])([Object(u["b"])({type:T["a"]}),Object(v["a"])("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),Object(n["a"])([Object(u["b"])(I["n"])],t.prototype,"url",null),Object(n["a"])([Object(u["b"])({types:r["a"]})],t.prototype,"renderer",null),Object(n["a"])([Object(u["b"])()],t.prototype,"symbolizer",void 0),t=Object(n["a"])([Object(m["a"])("esri.layers.ImageryTileMixin")],t),t};var D=i("b911"),B=i("0db5"),A=i("8e17"),N=i("5a62"),E=i("601a"),L=i("a1f3"),H=i("4607"),J=i("f806"),q=i("a4f3"),W=i("53d3"),$=i("6a0e"),U=i("fab3"),G=i("218c"),V=i("1451"),X=i("9dee"),Y=i("b4e0"),K=i("4ae5");const Q=8;let Z=class extends(Object(U["b"])($["a"])){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=Object(Y["g"])();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:T["a"].create(),...e.ioConfig}}),e}set url(e){this._set("url",Object(w["g"])(e,g["a"].getLogger(this.declaredClass)))}async open(e){throw new s["a"]("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,n={}){const a=n.tileInfo||this.rasterInfo.storageInfo.tileInfo,r=this.getTileExtentFromTileInfo(e,t,i,a);return this.fetchPixels(r,a.size[0],a.size[1],n)}async identify(e,t={}){t=this._getRequestOptionsWithSliceId(t);const{spatialReference:i,extent:n}=this.rasterInfo,{datumTransformation:a}=t;let r=Object(Y["i"])(e,i,a);if(!n.intersects(r))return{location:r,value:null};if(Object(o["l"])(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(r);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};r=e}let s=0;if(t.srcResolution)s=Object(Y["m"])(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(s=await this.computeBestPyramidLevelForLocation(e,t),null==s)return{location:r,value:null};const l=this.identifyPixelLocation(r,s,null);if(null===l)return{location:r,value:null};const{row:c,col:u,rowOffset:f,colOffset:h}=l,d=Object(G["d"])(this.url,t.sliceId),m=`${s}/${c}/${u}`;let p=Object(G["c"])(d,null,m);Object(o["k"])(p)&&(p=this.fetchRawTile(s,c,u,t),Object(G["e"])(d,null,m,p));const y=await p;if(Object(o["k"])(y)||!y.pixels||0===y.pixels.length)return{location:r,value:null};const b=f*this.rasterInfo.storageInfo.blockHeight+h,x=!y.mask||y.mask[b]?y.pixels.map(e=>e[b]):null,g=this.rasterInfo.dataType;return("vector-magdir"===g||"vector-uv"===g)&&(null==x?void 0:x.length)>1?{location:r,value:x,magdirValue:"vector-magdir"===g?[x[0],x[1]]:Object(R["i"])([x[0],x[1]]),pyramidLevel:s}:{location:r,value:x,pyramidLevel:s}}async fetchPixels(e,t,i,n={}){e=Object(Y["l"])(e);const a=Object(Y["e"])(e.spatialReference),r=Object(Y["f"])(e),s=Object(Y["e"])(this.rasterInfo.spatialReference),l=Object(o["l"])(s)&&this.rasterInfo.extent.width>=s/2;if(n=this._getRequestOptionsWithSliceId(n),Object(o["k"])(a)||0===r||1===r&&l)return this._fetchPixels(e,t,i,n);if(r>=3)return{extent:e,pixelBlock:null};const c=[],{xmin:u,xmax:f}=e,h=Math.round(a/(f-u)*t),d=h-Math.round((a/2-u)/(f-u)*t);let m=0;const p=[];for(let o=0;o<=r;o++){const s=new k["a"]({xmin:0===o?u:-a/2,xmax:o===r?f-a*o:a/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),l=0===o?h-d:o===r?t-m:h;m+=l,p.push(l);const y=this._fetchPixels(s,l,i,n);c.push(y)}const y=(await Promise.all(c)).map(e=>null==e?void 0:e.pixelBlock);let b=null;const x={width:t,height:i};return b=this.rasterJobHandler?await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:y,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:p},n):Object(X["k"])(y,x,{blockWidths:p}),{extent:e,srcExtent:Object(Y["h"])(e,this.rasterInfo.spatialReference,n.datumTransformation),pixelBlock:b}}async fetchRawPixels(e,t,i,n){const{origin:a,blockBoundary:r}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:f,height:h,wrapCount:d}=i;const m=Object(o["t"])(this._getRasterTileAlignmentInfo(e,0));n.buffer&&(c-=n.buffer.cols,u-=n.buffer.rows,f+=2*n.buffer.cols,h+=2*n.buffer.rows);const p=Math.floor(c/s),y=Math.floor(u/l),b=Math.floor((c+f-1)/s),x=Math.floor((u+h-1)/l),g=r[e];if(!g)return null;const{minRow:v,minCol:O,maxCol:w,maxRow:I}=g;if(0===d&&(x<v||b<O||y>I||p>w))return null;const j=new Array;let S=!1;const T=null==this.ioConfig.allowPartialFill?n.allowPartialFill:this.ioConfig.allowPartialFill;for(let o=y;o<=x;o++)for(let t=p;t<=b;t++){const i=0===d||null==m||t<m.worldColumnCountFromOrigin?t:t%m.worldColumnCountFromOrigin-m.originColumnOffset;if(o>=v&&i>=O&&I>=o&&w>=i){const t=this._fetchRawTile(e,o,i,n);T?j.push(new Promise(e=>{t.then(t=>e(t)).catch(()=>{S=!0,e(null)})})):j.push(t)}else j.push(null)}if(0===j.length)return null;const R=await Promise.all(j),_={height:(x-y+1)*l,width:(b-p+1)*s},{spatialReference:C}=this.rasterInfo,M=this.getPyramidPixelSize(e),{x:P,y:F}=M;return{extent:new k["a"]({xmin:a.x+p*s*P,xmax:a.x+(b+1)*s*P,ymin:a.y-(x+1)*l*F,ymax:a.y-y*l*F,spatialReference:C}),pixelBlocks:R,mosaicSize:_,isPartiallyFilled:S}}fetchRawTile(e,t,i,n){throw new s["a"]("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Object(Y["h"])(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object(V["a"])(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var n,a;const{customFetchParameters:r}=this.ioConfig,{range:s,query:o,headers:l}=t;i=null!=(n=null!=(a=i)?a:t.retryCount)?n:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(x["default"])(e,{...t,query:{...o,...r},headers:{...l,...c}})}catch(u){if(i>0)return i--,this.request(e,t,i);throw u}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!Object(o["l"])(t))return null;if(!Object(o["l"])(e)||0===e.length)return null;let i=0;const n=e[0].variableName;for(let a=0;a<t.variables.length;a++){const r=t.variables[a],s=r.dimensions;if(r.name!==n){i+=s.map(e=>this._getDimensionValuesCount(e)).reduce((e,t)=>e+t);break}const o=s.map(e=>this._getDimensionValuesCount(e)),l=s.length;for(let t=0;t<l;t++){const n=e.filter(e=>e.dimensionName===s[t].name)[0];if(null==n)return null;const a=Array.isArray(n.values[0])?n.values[0][0]:n.values[0],r=this._getIndexFromDimensions(a,s[t]);if(-1===r)return null;o.shift(),i+=t===l-1?r:r*o.reduce((e,t)=>e+t)}}return i}getTileExtentFromTileInfo(e,t,i,n){const a=n.lodAt(e);return this.getTileExtent({x:a.resolution,y:a.resolution},t,i,n.origin,n.spatialReference,n.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo;if(!e.tileInfo){const a=[],r=e.maximumPyramidLevel||0;let s=Math.max(n.x,n.y),o=1/.0254*96*s;for(let e=0;e<=r;e++)a.push({level:r-e,resolution:s,scale:o}),s*=2,o*=2;const l=new K["a"]({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new T["a"]({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:a}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,n){const{width:a,height:r,nativeExtent:s,pixelSize:o,spatialReference:l}=e,c=new K["a"]({x:s.xmin,y:s.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(a,r))/Math.LN2-8)));const u=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[o],n);e.storageInfo=new W["a"]({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,n,a,r=0,s=2){if(1===a.length&&r>0){a=[...a];let{x:e,y:t}=a[0];for(let i=0;i<r;i++)e*=s,t*=s,a.push({x:e,y:t})}const o=[],{x:l,y:c}=n;for(let u=0;u<a.length;u++){const{x:n,y:r}=a[u];o.push({minCol:Math.floor((e.xmin-l+.1*n)/t/n),maxCol:Math.floor((e.xmax-l-.1*n)/t/n),minRow:Math.floor((c-e.ymax+.1*r)/i/r),maxRow:Math.floor((c-e.ymin-.1*r)/i/r)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo;if(0===e)return t;if(Object(o["l"])(i)&&i.length)return i[e-1];const a=n**e;return{x:t.x*a,y:t.y*a}}identifyPixelLocation(e,t,i){const{spatialReference:n,nativeExtent:a}=this.rasterInfo,{blockWidth:r,blockHeight:s,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,c=Object(Y["i"])(e,n,i);if(!a.intersects(c))return null;if(t<0||t>o)return null;const u=this.getPyramidPixelSize(t),{x:f,y:h}=u,d=(l.y-c.y)/h/s,m=(c.x-l.x)/f/r,p=Math.min(s-1,Math.floor((d-Math.floor(d))*s)),y=Math.min(r-1,Math.floor((m-Math.floor(m))*r));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(m),rowOffset:p,colOffset:y,srcLocation:c}}getTileExtent(e,t,i,n,a,r){const[s,o]=r,l=n.x+i*s*e.x,c=l+s*e.x,u=n.y-t*o*e.y,f=u-o*e.y;return new k["a"]({xmin:l,xmax:c,ymin:f,ymax:u,spatialReference:a})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];return!n||n.maxRow<t||n.maxCol<i||n.minRow>t||n.minCol>i}async _fetchPixels(e,t,i,n={}){let a=Object(Y["f"])(e);if(a>=2)return{extent:e,pixelBlock:null};const r=this._getSourceDataInfo(e,t,i,n),{pyramidLevel:s,pyramidResolution:l,srcResolution:c,srcExtent:u,srcWidth:f,srcHeight:h}=r;if(0===f||0===h)return{extent:e,srcExtent:u,pixelBlock:null};const d=Object(o["t"])(this.rasterInfo.transform);"gcs-shift"===(null==d?void 0:d.type)&&(a=Object(Y["f"])(r.srcExtent,!0));const m=this.rasterInfo.storageInfo,p={x:Math.floor((u.xmin-m.origin.x)/l.x+.1),y:Math.floor((m.origin.y-u.ymax)/l.y+.1)},y=await this.fetchRawPixels(s,p,{width:f,height:h,wrapCount:a},n);if(!y)return{extent:e,srcExtent:u,pixelBlock:null};const b=s>0?m.pyramidBlockWidth:m.blockWidth,x=s>0?m.pyramidBlockHeight:m.blockHeight,g=b===f&&x===h&&p.x%b==0&&p.y%x==0,v=new K["a"]({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),O=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:w}=n;if(!O&&g&&1===y.pixelBlocks.length&&b===t&&x===i&&c.x===v.x&&c.y===v.y)return{extent:e,srcExtent:u,pixelBlock:y.pixelBlocks[0]};const I=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:v.toJSON(),datumTransformation:w,rasterTransform:d,hasWrapAround:a>0,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy},n):Object(Y["c"])({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:v,datumTransformation:w,rasterTransform:d,hasWrapAround:a>0,isAdaptive:!1});let j;const S=!n.requestRawData,T={rows:I.spacing[0],cols:I.spacing[1]},R=Object(o["t"])(this._getRasterTileAlignmentInfo(s,y.extent.xmin)),{pixelBlocks:_,mosaicSize:C,isPartiallyFilled:M}=y;if(this.rasterJobHandler)j=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:_,srcMosaicSize:C,destDimension:S?{width:t,height:i}:null,coefs:S?I.coefficients:null,sampleSpacing:S?T:null,interpolation:n.interpolation,alignmentInfo:R,blockWidths:null},n);else{const e=Object(X["k"])(_,C,{alignmentInfo:R});j=S?Object(X["a"])(e,{width:t,height:i},I.coefficients,T,n.interpolation):e}return n.requestRawData?{srcExtent:u,pixelBlock:j,transformGrid:I,extent:e,isPartiallyFilled:M}:{srcExtent:u,extent:e,pixelBlock:j}}_fetchRawTile(e,t,i,n){const a=this.rasterInfo.storageInfo.blockBoundary[e];if(!a)return Promise.resolve(null);const{minRow:r,minCol:s,maxCol:l,maxRow:u}=a;if(t<r||i<s||t>u||i>l)return Promise.resolve(null);const f=Object(G["d"])(this.url,n.sliceId),h=`${e}/${t}/${i}`;let d=Object(G["c"])(f,n.registryId,h);if(Object(o["k"])(d)){const a=new AbortController;d=this.fetchRawTile(e,t,i,{...n,signal:a.signal}),Object(G["e"])(f,n.registryId,h,d,a),d.catch(()=>Object(G["b"])(f,n.registryId,h))}return n.signal&&Object(c["p"])(n,()=>{Object(G["a"])(f,n.registryId,h)}),d}_getIndexFromDimensions(e,t){const{extent:i,interval:n,unit:a,values:r}=t;if(null!=r&&r.length)return Array.isArray(r[0])?r.findIndex(t=>t[0]<=e&&t[1]>=e):r.indexOf(e);if(e>i[1])return-1;const s=i[0];let o=-1;if("ISO8601"===a){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-s)/1e3/n);break;case"minutes":o=Math.round((e-s)/6e4/n);break;case"hours":o=Math.round((e-s)/36e5/n);break;case"days":o=Math.round((e-s)/864e5/n);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/n);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/n)}return o}return Math.round((e-s)/n)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:n,values:a}=e;let r=(null==a?void 0:a.length)||0;if(r)return r;const s=t[0];if(0===r&&"ISO8601"===n){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":r=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":r=Math.round((t[1]-t[0])/6e4/i);break;case"hours":r=Math.round((t[1]-t[0])/36e5/i);break;case"days":r=Math.round((t[1]-t[0])/864e5/i);break;case"years":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case"decades":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return r}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=Object(Y["d"])(this.rasterInfo)),Object(o["l"])(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}_getSourceDataInfo(e,t,i,n={}){const a={datumTransformation:n.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};n.srcResolution&&(a.srcResolution=n.srcResolution,this._updateSourceDataInfo(e,a));const r=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:o,pyramidLevel:l}=a,c=s/t,u=o/i,f=l<r&&c*u>=16;if(f||l===r&&(c>Q||u>Q)||0===s||0===o){const s=new K["a"]({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=Object(Y["j"])(s,this.rasterInfo.spatialReference,e,a.datumTransformation);const h=!o||n.srcResolution&&o.x+o.y<n.srcResolution.x+n.srcResolution.y;if(f&&n.srcResolution&&h){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(r-l+3>=e){const t=2**e;o={x:n.srcResolution.x*t,y:n.srcResolution.y*t}}}o&&(a.srcResolution=o,this._updateSourceDataInfo(e,a))}return(a.srcWidth/t>Q||a.srcHeight/i>Q)&&(a.srcWidth=0,a.srcHeight=0),a}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:n,datumTransformation:a}=t,{pyramidLevel:r,pyramidResolution:s,excessiveReading:l}=Object(Y["m"])(n,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||Object(Y["h"])(e,i,a);if(null==c)return;const u=Object(o["t"])(this.rasterInfo.transform);u&&(c=u.inverseTransform(c)),t.srcExtent=c;const f=Math.ceil((c.xmax-c.xmin)/s.x-.1),h=Math.ceil((c.ymax-c.ymin)/s.y-.1);t.pyramidLevel=r,t.pyramidResolution=s,t.srcWidth=f,t.srcHeight=h}_getRequestOptionsWithSliceId(e){return Object(o["l"])(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}};Object(n["a"])([Object(u["b"])()],Z.prototype,"_rasterTileAlighmentInfo",void 0),Object(n["a"])([Object(u["b"])(I["n"])],Z.prototype,"url",null),Object(n["a"])([Object(u["b"])({type:String,json:{write:!0}})],Z.prototype,"datasetName",void 0),Object(n["a"])([Object(u["b"])({type:String,json:{write:!0}})],Z.prototype,"datasetFormat",void 0),Object(n["a"])([Object(u["b"])()],Z.prototype,"rasterInfo",void 0),Object(n["a"])([Object(u["b"])()],Z.prototype,"ioConfig",void 0),Object(n["a"])([Object(u["b"])()],Z.prototype,"sourceJSON",void 0),Z=Object(n["a"])([Object(m["a"])("esri.layers.support.rasterDatasets.BaseRaster")],Z);const ee=Z;var te=i("742a");function ie(e){const t=e.fields,i=e.records,n=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",a=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),r=a.map(e=>e.name),s=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[n]=o++,l=1;l<r.length;l++)t[r[l]]=e[l-1];s.push({attributes:t})}),{displayFieldName:"",fields:a,features:s}}class ne{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),a=t.getUint16(8,!0),r=t.getUint16(10,!0),s={version:i,recordCount:n,headerByteCount:a,recordByteCount:r};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Object(te["a"])(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>r;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push(Object(te["a"])(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length}),c.push(i)):o+=r}}return{header:s,fields:l,records:c,recordSet:ie({fields:l,records:c})}}}var ae=i("8c6a"),re=i("2edc");const se=new Map;se.set("int16","esriFieldTypeSmallInteger"),se.set("int32","esriFieldTypeInteger"),se.set("int64","esriFieldTypeInteger"),se.set("float32","esriFieldTypeSingle"),se.set("float64","esriFieldTypeDouble"),se.set("text","esriFieldTypeString");const oe=8;let le=class extends ee{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new s["a"]("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,n={}){const a=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(a<0)return null;const r=this._buildCacheFilePath(a,t,i,n.multidimensionalDefinition),s=this._getIndexRecordFromBundle(t,i),o=await this.request(r,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,s);if(0===c.recordSize)return null;const u=await this.request(r,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:n.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){const t=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&"RasterInfo"===e.type&&!t.some(t=>!e[t])}_parseHeader(e){var t,i;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:a,histograms:r,colormap:s,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,f=e.statistics&&e.statistics.map(e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode})),h=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,m=new P["a"](null!=h&&h.wkid||null!=h&&h.wkt?h:d);let p=new k["a"]({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const y=new K["a"]({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),b=Math.round((p.xmax-p.xmin)/y.x),x=Math.round((p.ymax-p.ymin)/y.y),g=this._parseTransform(e.geodataXform),v=g?p:null;g&&(p=g.forwardTransform(p),y.x=(p.xmax-p.xmin)/b,y.y=(p.ymax-p.ymin)/x);const O=null!=(i=e.properties)?i:{},w=e.format.toLowerCase().replace("cache/",""),I=new K["a"](e.origin.x,e.origin.y,m);let j,S,R,_;if(s&&s.colors)for(j=[],S=0;S<s.colors.length;S++)R=s.colors[S],_=s.values?s.values[S]:S,j.push([_,255&R,R<<16>>>24,R<<8>>>24,R>>>24]);const C=e.LODInfos,M=[];for(S=0;S<C.levels.length;S++)M.push({level:C.levels[S],resolution:C.resolutions[S],scale:96/.0254*C.resolutions[S]});const F=new T["a"]({dpi:96,lods:M,format:w,origin:I,size:[o,l],spatialReference:m}),z={recordSize:oe,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*oe+64},D=[{maxCol:Math.ceil(b/o)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let B=2;if(u>0)for(S=0;S<u;S++)D.push({maxCol:Math.ceil(b/B/o)-1,maxRow:Math.ceil(x/B/l)-1,minCol:0,minRow:0}),B*=2;const A=e.mdInfo;return{storageInfo:z,rasterInfo:new q["a"]({width:b,height:x,pixelType:n,bandCount:a,extent:p,nativeExtent:v,transform:g,spatialReference:m,pixelSize:y,keyProperties:O,statistics:f,histograms:r,multidimensionalInfo:A,colormap:j,storageInfo:new W["a"]({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:I,tileInfo:F,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:D})})}}_parseTransform(e){var t,i;if(!Object(ae["a"])(e))throw new s["a"]("cloudraster:open","the data contains unsupported geodata transform types");const n=Object(ae["b"])(e);if("identity"===n.type)return null;if("polynomial"!==n.type||null==(t=n.forwardCoefficients)||!t.length||null==(i=n.inverseCoefficients)||!i.length)throw new s["a"]("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(e=>e.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(e=>e.data).catch(()=>null),n=await Promise.all([t,i]);let a;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map(e=>({type:"OID"===e.name?"esriFieldTypeOID":se.get(e.type),name:e.name,alias:e.alias||e.name}));const i=t.map(e=>({attributes:e}));e&&t&&(a={fields:e,features:i})}}return!a&&n[1]&&(a=ne.parse(n[1]).recordSet),re["default"].fromJSON(a)}_buildCacheFilePath(e,t,i,n){const a=this.storageInfo.packetSize,r=Math.floor(t/a)*a,s=Math.floor(i/a)*a,l="R"+this._toHexString4(r)+"C"+this._toHexString4(s);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,f=null==n?void 0:n[0];if(!Object(o["l"])(u)||!f)return`${this.url}/_alllayers/${c}/${l}.bundle`;let h=u.variables.filter(e=>e.name===f.variableName)[0].dimensions[0].values.indexOf(f.values[0]).toString(16);const d=4-h.length;for(let o=0;o<d;o++)h="0"+h;return h="S"+h,`${this.url}/_alllayers/${f.variableName}/${h}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,n=i*(e%i)+t%i;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,a=0;for(n=0;n<5;n++)a|=(255&i[n])<<8*n;const r=0xffffffffff&a;for(a=0,n=5;n<8;n++)a|=(255&i[n])<<8*(n-5);return{position:r,recordSize:0xffffffffff&a}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(n["a"])([Object(u["b"])({readOnly:!0})],le.prototype,"storageInfo",void 0),Object(n["a"])([Object(u["b"])({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),le=Object(n["a"])([Object(m["a"])("esri.layers.support.rasterDatasets.CloudRaster")],le);const ce=le;let ue=class extends ee{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:n,histograms:a,name:r,keyProperties:s,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:f}=i,h=this.data.extent||new k["a"]({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new P["a"]({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,m={x:h.width/c,y:h.height/u},p=new q["a"]({width:c,height:u,pixelType:f,extent:h,nativeExtent:o,transform:l,pixelSize:m,spatialReference:h.spatialReference,bandCount:3,keyProperties:s||{},statistics:n,isPseudoSpatialReference:d,histograms:a});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i,n={}){const a=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(a)}async _buildInMemoryRaster(e,t,i){const n=this.rasterInfo.storageInfo.maximumPyramidLevel,a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:n},i):Promise.resolve(Object(X["o"])(e,t,n)),r=Object(o["l"])(this.rasterInfo.statistics),l=Object(o["l"])(this.rasterInfo.histograms),u=r&&l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Object(X["g"])(e)),f=await Object(c["i"])([a,u]);if(!f[0].value&&f[1].value)throw new s["a"]("inmemory-raster:open","failed to build in memory raster");var h,d;this._pixelBlockTiles=f[0].value,r||(this.rasterInfo.statistics=null==(h=f[1].value)?void 0:h.statistics),l&&(this.rasterInfo.histograms=null==(d=f[1].value)?void 0:d.histograms)}};Object(n["a"])([Object(u["b"])({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),Object(n["a"])([Object(u["b"])()],ue.prototype,"data",void 0),ue=Object(n["a"])([Object(m["a"])("esri.layers.support.rasterDatasets.InMemoryRaster")],ue);const fe=ue;function he(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const a=he(e,i);for(let e=0;e<a.length;e++)he(a[e],t).forEach(e=>n.push(e));return n}const a=e.getElementsByTagNameNS("*",i);if(!a||0===a.length)return[];for(let r=0;r<a.length;r++)n.push(a[r]||a.item[r]);return n}function de(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=he(e,i);return n.length>0?t?de(n[0],t):n[0]:null}function me(e,t=null){const i=t?de(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function pe(e,t){const i=he(e,t),n=[];let a;for(let r=0;r<i.length;r++)a=i[r].textContent||i[r].nodeValue,a&&(a=a.trim(),""!==a&&n.push(a));return n}function ye(e,t){return pe(e,t).map(e=>Number(e))}function be(e,t){const i=me(e,t);return Number(i)}function xe(e,t){var i;const n=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),a=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===a}var ge=i("7fb1");function ve(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function Oe(e){var t;const i=de(e,"GeodataXform"),n=Ie(be(i,"SpatialReference/WKID")||me(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const a=null!=(t=be(i,"PolynomialOrder"))?t:1,r=ye(i,"CoeffX/Double"),s=ye(i,"CoeffY/Double"),o=ye(i,"InverseCoeffX/Double"),l=ye(i,"InverseCoeffY/Double"),c=ve(r,s),u=ve(o,l);return{spatialReference:n,transform:new ge["a"]({spatialReference:n,polynomialOrder:a,forwardCoefficients:c,inverseCoefficients:u})}}function we(e){var t;const i=be(e,"NoDataValue"),n=de(e,"Histograms/HistItem"),a=be(n,"HistMin"),r=be(n,"HistMax"),s=be(n,"BucketCount"),o=null==(t=me(n,"HistCounts"))?void 0:t.split("|").map(e=>Number(e));let l,c,u,f;he(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":f=i}});const h=be(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:a,max:r,size:s||o.length,counts:o}:null,sourceBandIndex:h,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:f}:null}}function Ie(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new P["a"]({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),n=e.indexOf("PROJCS"),a=n>-1?n:e.indexOf("GEOGCS");if(-1===a)return null;const r=e.slice(a,e.lastIndexOf("]",i)+1).trim(),s=e.slice(i,e.lastIndexOf("]")).trim();t=je(r);const o=new P["a"](t?{wkid:t}:{wkt:r}),l=je(s);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=je(e),new P["a"](0!==t?{wkid:t}:{wkt:e})):null}function je(e){var t;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(e=>e.trim()).filter(e=>""!==e),n=i[i.length-1].split(","),a=null==(t=n[0])?void 0:t.toLowerCase();if(("epsg"===a||"esri"===a)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Se(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if(xe(e,"SRS")){if(!i.spatialReference){const t=me(e);i.spatialReference=Ie(t)}}else if(xe(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=Oe(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else he(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=me(e));else if(xe(e,"PAMRasterBand")){const t=we(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const n=i.rasterBands;if(n){const e=!!n[0].statistics;i.statistics=e?n.map(e=>e.statistics):null;const t=!!n[0].histogram;i.histograms=t?n.map(e=>e.histogram):null}return i}let Te=class extends ee{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:a,transform:r}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new P["a"]({wkid:3857})),null!=a&&a.length&&null==n&&(n=Object(X["f"])(a));const{width:o,height:l}=t;let c=new k["a"]({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(c):c;let f=!0;if(r){const e=r.forwardCoefficients;f=e&&0===e[1]&&0===e[2],f&&(r=null,c=u)}const h=new fe({data:{extent:u,nativeExtent:c,transform:r,pixelBlock:t,statistics:n,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s}});await h.open(),this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(e,t,i,n={}){return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=Object(V["b"])(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new s["a"]("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const n=Object(o["t"])(null==e?void 0:e.signal),a=null!=(t=this.ioConfig.skipExtensions)?t:[],r=a.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),s=this.datasetFormat,l="JPG"===s?"jgw":"PNG"===s?"pgw":"BMP"===s?"bpw":null,u=a.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:n}),f=await Object(c["i"])([r,u]);if(null!=n&&n.aborted)throw Object(c["d"])();const h=Se(null==(i=f[0].value)?void 0:i.data);if(!h.transform){const e=f[1].value?f[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;h.transform=6===(null==e?void 0:e.length)?new ge["a"]({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};Object(n["a"])([Object(u["b"])({type:String,json:{write:!0}})],Te.prototype,"datasetFormat",void 0),Te=Object(n["a"])([Object(m["a"])("esri.layers.support.rasterDatasets.ImageAuxRaster")],Te);const Re=Te;var _e=i("e041"),Ce=i("ab68"),Me=i("9651"),ke=i("773d");let Pe=class extends ee{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;if(this.sourceJSON=n,!n)throw new s["a"]("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new s["a"]("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const a=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=n.cacheType,null==this.tileType&&(a.indexOf(n.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===n.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=n.name.slice(n.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!Object(o["l"])(r))throw new s["a"]("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?Object(Ce["a"])(n.tileInfo,n):T["a"].fromJSON(n.tileInfo),{extent:t,pixelSize:i}=r,a=.5/r.width*i.x;let s,o;const l=e.lodAt(Math.max.apply(null,e.lods.map(e=>e.level)));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(s=e.lods.filter(e=>e.resolution===i.x)[0],s||(s=e.lods[e.lods.length-1])):(s=e.lods.filter(e=>Math.abs(e.scale-n.maxScale)<a)[0],s||(s=e.lods.filter(e=>e.scale>n.maxScale).sort((e,t)=>e.scale>t.scale?1:-1)[0])),i.x=i.y=s.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=l);const c=e.lodAt(Math.min.apply(null,e.lods.map(e=>e.level)));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter(e=>Math.abs(e.scale-n.minScale)<a)[0],this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>a||!e.lods.some(e=>Math.abs(e.resolution-u)<a))&&(i.x=i.y=s.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const f=s.level-o.level,[h,d]=e.size,m=[];e.lods.forEach(e=>{e.level>=o.level&&e.level<=s.level&&m.push({x:e.resolution,y:e.resolution})}),m.sort((e,t)=>e.x-t.x);const p=this.computeBlockBoundary(t,h,d,e.origin,m,f),y=m.length>1?m.slice(1):null;r.storageInfo=new W["a"]({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:f,tileInfo:e,blockBoundary:p}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(n.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:Object(_e["K"])(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Me["a"]({layer:e})}}async fetchRawTile(e,t,i,n={}){if(this._slices&&null==n.sliceId)return null;const{storageInfo:a,extent:r}=this.rasterInfo,s=a.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${s}/${t}/${i}`,l=this._slices?{sliceId:n.sliceId||0}:null,{data:c}=await this.request(o,{query:l,responseType:"array-buffer",signal:n.signal});if(!c)return null;const u=await this.decodePixelBlock(c,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=a.blockBoundary[e];if("jpg"!==a.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return u;const{origin:h,blockWidth:d,blockHeight:m}=a,{x:p,y:y}=this.getPyramidPixelSize(e),b=Math.round((r.xmin-h.x)/p)%d,x=Math.round((r.xmax-h.x)/p)%d,g=Math.round((h.y-r.ymax)/y)%m,v=Math.round((h.y-r.ymin)/y)%m,O=i===f.minCol?b:0,w=t===f.minRow?g:0,I=i===f.maxCol?x:d,j=t===f.maxRow?v:m;return Object(X["n"])(u,{x:O,y:w},{width:I-O,height:j-w}),u}getSliceIndex(e){if(!this._slices||Object(o["k"])(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const i=t.filter(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName)[0];return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])}))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Promise.all([i,n]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,Object(o["t"])(t.datumTransformation));if(null===i)return null;let n=0;const{maximumPyramidLevel:a}=this.rasterInfo.storageInfo;let r=a-n+this._levelOffset;const s=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,n++,i=this.identifyPixelLocation(s,n,Object(o["t"])(t.datumTransformation)),null===i)return null}return-1===r||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=P["a"].fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new q["a"]({width:i,height:n,bandCount:3,extent:k["a"].fromJSON(t.extent),spatialReference:a,pixelSize:new K["a"]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:r,signal:s}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:r,f:"json"},signal:s}).then(e=>re["default"].fromJSON(e.data)).catch(()=>null),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:r,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:r,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:s}).then(e=>e.data).catch(()=>{}),f=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),h=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:s}).then(e=>e.data&&e.data.slices).catch(()=>{});return Promise.all([o,l,c,u,f,h]).then(e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new q["a"]({width:i,height:n,bandCount:t.bandCount,extent:k["a"].fromJSON(t.extent),spatialReference:a,pixelSize:new K["a"]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=i.variables)&&t.length&&i.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new ke["a"],e.extent=e.transform.forwardTransform(t))}};Object(n["a"])([Object(u["b"])({type:String,json:{write:!0}})],Pe.prototype,"datasetFormat",void 0),Object(n["a"])([Object(u["b"])()],Pe.prototype,"tileType",void 0),Pe=Object(n["a"])([Object(m["a"])("esri.layers.support.rasterDatasets.ImageServerRaster")],Pe);const Fe=Pe;var ze=i("3e27"),De=i("e55a");const Be=new Map;Be.set("Int8","s8"),Be.set("UInt8","u8"),Be.set("Int16","s16"),Be.set("UInt16","u16"),Be.set("Int32","s32"),Be.set("UInt32","u32"),Be.set("Float32","f32"),Be.set("Float64","f32"),Be.set("Double64","f32");const Ae=new Map;Ae.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Ae.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Ae.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Ae.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Ne=class extends ee{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?Object(o["t"])(e.signal):null,n=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:a,files:r}=this._parseHeader(n.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var s;null!=t&&(a.statistics=null!=(s=t.statistics)?s:a.statistics,a.histograms=t.histograms,t.histograms&&!Object(o["l"])(a.statistics)&&(a.statistics=Object(X["f"])(t.histograms)))}this._set("rasterInfo",a),this._files=r;const l=await this.request(r.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,f=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:d}=this.rasterInfo,m=[],p=this._getBandSegmentCount();let y=0,b=-1;for(;y<this._storageIndex.length;){b++;const e=Math.ceil(h/c/f**b)-1,t=Math.ceil(d/u/f**b)-1;y+=1*e*(1*t)*p*4,m.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,b>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=b),this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){const{blockWidth:a,blockHeight:r,blockBoundary:s}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:f,actualTileWidth:h,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!f||0===f.length)return null;if(0===f[0].from&&0===f[0].to){const e=new Uint8Array(a*r);return new ze["a"]({width:a,height:r,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let b=0;for(b=0;b<p;b++)(!m||m.indexOf[b]>-1)&&y.push(this.request(this._files.data,{range:{from:f[b].from,to:f[b].to},responseType:"array-buffer",signal:n.signal}));const x=await Promise.all(y),g=x.map(e=>e.data.byteLength).reduce((e,t)=>e+t),v=new Uint8Array(g);let O=0;for(b=0;b<p;b++)v.set(new Uint8Array(x[b].data),O),O+=x[b].data.byteLength;const w=Ae.get(this.rasterInfo.storageInfo.compression).decoderFormat,I=await this.decodePixelBlock(v.buffer,{width:a,height:r,format:w,planes:(null==m?void 0:m.length)||c,pixelType:u});if(Object(o["l"])(this.rasterInfo.noDataValue)&&"lerc"!==w&&!I.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=I.width*I.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(b=0;b<t;b++)Math.abs((I.pixels[0][b]-e)/e)>1e-6&&(i[b]=1);else for(b=0;b<t;b++)I.pixels[0][b]!==e&&(i[b]=1);I.mask=i}}let j=0,S=0;if(h!==a||d!==r){let e=I.mask;if(e)for(b=0;b<r;b++)if(S=b*a,b<d)for(j=h;j<a;j++)e[S+j]=0;else for(j=0;j<a;j++)e[S+j]=0;else for(e=new Uint8Array(a*r),I.mask=e,b=0;b<d;b++)for(S=b*a,j=0;j<h;j++)e[S+j]=1}return I}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,a,r,s;if(De["a"]){for(i=new Uint8Array(e),a=new ArrayBuffer(e.byteLength),n=new Uint8Array(a),r=0;r<e.byteLength/4;r++)for(s=0;s<4;s++)n[4*r+s]=i[4*r+3-s];t=new Uint32Array(a)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return Ae.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:a,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:s,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,f,h=0,d=0;for(f=0;f<e;f++)d=r**f,c=Math.ceil(s/n/d),u=Math.ceil(o/a/d),h+=c*u;d=r**e,c=Math.ceil(s/n/d),u=Math.ceil(o/a/d),h+=t*c+i,h*=4*l;const m=this._storageIndex.subarray(h,h+4*l);let p=0,y=0;const b=[];for(let x=0;x<l;x++)p=m[4*x+0]*2**32+m[4*x+1],y=p+m[4*x+2]*2**32+m[4*x+3],b.push({from:p,to:y});return{ranges:b,actualTileWidth:i<c-1?n:Math.ceil(s/d)-n*(c-1),actualTileHeight:t<u-1?a:Math.ceil(o/d)-a*(u-1)}}_parseHeader(e){const t=de(e,"MRF_META/Raster");if(!t)throw new s["a"]("mrf:open","not a valid MRF format");const i=de(t,"Size"),n=parseInt(i.getAttribute("x"),10),a=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),o=(me(t,"Compression")||"none").toLowerCase();if(!Ae.has(o))throw new s["a"]("mrf:open","currently does not support compression "+o);const l=me(t,"DataType")||"UInt8",c=Be.get(l);if(null==c)throw new s["a"]("mrf:open","currently does not support pixel type "+l);const u=de(t,"PageSize"),f=parseInt(u.getAttribute("x"),10),h=parseInt(u.getAttribute("y"),10),d=de(t,"DataValues");let m,p;if(d&&(p=d.getAttribute("NoData"),null!=p&&(m=p.trim().split(" ").map(e=>parseFloat(e)))),de(e,"MRF_META/CachedSource"))throw new s["a"]("mrf:open","currently does not support MRF referencing other data files");const y=de(e,"MRF_META/GeoTags"),b=de(y,"BoundingBox");if(null==b)throw new s["a"]("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const x=parseFloat(b.getAttribute("minx")),g=parseFloat(b.getAttribute("miny")),v=parseFloat(b.getAttribute("maxx")),O=parseFloat(b.getAttribute("maxy")),w=me(y,"Projection")||"",I=me(e,"datafile"),j=me(e,"IndexFile");let S;if("LOCAL_CS[]"!==w)if(w.toLowerCase().startsWith("epsg:")){const e=Number(w.slice(5));isNaN(e)||0===e||(S=new P["a"]({wkid:e}))}else S=Ie(w);const T=new k["a"](x,g,v,O);T.spatialReference=S;const R=de(e,"MRF_META/Rsets"),_=parseInt(R&&R.getAttribute("scale")||"2",10),C=new W["a"]({origin:new K["a"]({x:T.xmin,y:T.ymax,spatialReference:S}),blockWidth:f,blockHeight:h,pyramidBlockWidth:f,pyramidBlockHeight:h,compression:o,pyramidScalingFactor:_}),M=new K["a"]({x:(v-x)/n,y:(O-g)/a,spatialReference:S});return{rasterInfo:new q["a"]({width:n,height:a,extent:T,spatialReference:S,bandCount:r,pixelType:c,pixelSize:M,noDataValue:m,storageInfo:C}),files:{mrf:this.url,index:j||this.url.replace(".mrf",".idx"),data:I||this.url.replace(".mrf",Ae.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Se(t)}catch{return null}}};Object(n["a"])([Object(u["b"])()],Ne.prototype,"_files",void 0),Object(n["a"])([Object(u["b"])()],Ne.prototype,"_storageIndex",void 0),Object(n["a"])([Object(u["b"])({type:String,json:{write:!0}})],Ne.prototype,"datasetFormat",void 0),Ne=Object(n["a"])([Object(m["a"])("esri.layers.support.rasterIO.MRFRaster")],Ne);const Ee=Ne;var Le=i("a4bf"),He=i("0ffd");const Je=function(e,t){const i=e.get(t);return i&&i.values},qe=function(e,t){const i=e.get(t);return i&&i.values[0]};let We=class extends ee{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,n;await this.init();const a=e?Object(o["t"])(e.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:a});if(!r)throw new s["a"]("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:l,firstIFD:c,isBigTiff:u}=Object(Le["h"])(r),f=[];await this.readIFDs(f,r,l,c,0,u?8:4,a);const h=Object(Le["f"])(f),{width:d,height:m,tileWidth:p,tileHeight:y,planes:b,pixelType:x,compression:g,firstPyramidLevel:v,maximumPyramidLevel:O,pyramidBlockWidth:w,pyramidBlockHeight:I,tileBoundary:j,affine:S,metadata:T}=h,R=(null==(t=h.extent.spatialReference)?void 0:t.wkt)||(null==(i=h.extent.spatialReference)?void 0:i.wkid);let _=Ie(R),C=!1;null==_&&(C=!0,_=new P["a"]({wkid:3857}));const M=new k["a"]({...h.extent,spatialReference:_}),F=new K["a"](M?{x:M.xmin,y:M.ymax,spatialReference:_}:{x:0,y:0}),z=new W["a"]({blockWidth:p,blockHeight:y,pyramidBlockWidth:w,pyramidBlockHeight:I,compression:g,origin:F,firstPyramidLevel:v,maximumPyramidLevel:O,blockBoundary:j}),D=new K["a"]({x:(M.xmax-M.xmin)/d,y:(M.ymax-M.ymin)/m,spatialReference:_}),B=T?{BandProperties:T.bandProperties,DataType:T.dataType}:{},A=new q["a"]({width:d,height:m,bandCount:b,pixelType:x,compression:g,pixelSize:D,storageInfo:z,spatialReference:_,isPseudoSpatialReference:C,keyProperties:B,extent:M,statistics:T?T.statistics:null});if(null!=S&&S.length&&(A.nativeExtent=new k["a"]({xmin:-.5,ymin:.5-m,xmax:d-.5,ymax:.5,spatialReference:_}),A.transform=new ge["a"]({polynomialOrder:1,forwardCoefficients:[S[2]+S[0]/2,S[5]-S[3]/2,S[0],S[3],-S[1],-S[4]]}),A.extent=A.transform.forwardTransform(A.nativeExtent),A.pixelSize=new K["a"]({x:(M.xmax-M.xmin)/d,y:(M.ymax-M.ymin)/m,spatialReference:_}),z.origin.x=-.5,z.origin.y=.5),null==(n=this.ioConfig.skipExtensions)||!n.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var N;if(A.statistics=null!=(N=t.statistics)?N:A.statistics,A.histograms=t.histograms,t.histograms&&!Object(o["l"])(A.statistics)&&(A.statistics=Object(X["f"])(t.histograms)),t.transform&&!S){A.transform=t.transform,A.nativeExtent=A.extent;const e=A.transform.forwardTransform(A.nativeExtent);A.pixelSize=new K["a"]({x:(e.xmax-e.xmin)/d,y:(e.ymax-e.ymin)/m,spatialReference:_}),A.extent=e}A.spatialReference||(A.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",A),this._headerInfo={littleEndian:l,isBigTiff:u,ifds:f,...h},!this._headerInfo.isSupported)throw new s["a"]("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){var a;if(null==(a=this._headerInfo)||!a.isSupported||this.isBlockOutside(e,t,i))return null;const r=this.getTileLocation(e,t,i);if(!r)return null;const{ranges:s,actualTileWidth:o,actualTileHeight:l,ifd:c}=r,u=s.map(e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal})),f=await Promise.all(u),h=f.map(e=>e.data.byteLength).reduce((e,t)=>e+t),d=1===f.length?f[0].data:new ArrayBuffer(h),m=[0],p=[0];if(f.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<f.length;t++){const n=f[t].data;e.set(new Uint8Array(n),i),m[t]=i,i+=n.byteLength,p[t]=n.byteLength}}const{blockWidth:y,blockHeight:b}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:m,sizes:p},width:y,height:b,planes:null,pixelType:null});let g,v,O;if(o!==y||l!==b){let e=x.mask;if(e)for(g=0;g<b;g++)if(O=g*y,g<l)for(v=o;v<y;v++)e[O+v]=0;else for(v=0;v<y;v++)e[O+v]=0;else for(e=new Uint8Array(y*b),x.mask=e,g=0;g<l;g++)for(O=g*y,v=0;v<o;v++)e[O+v]=1}return x}async readIFDs(e,t,i,n,a,r=4,s){if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+a,to:n+a+this._bufferSize},responseType:"array-buffer",signal:s})).data,a=n+a,n=0);const o=await this.readIFD(t,i,n,a,He["a"].TIFF_TAGS,r,s);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-a,a,r,s)}async readIFD(e,t,i,n,a=He["a"].TIFF_TAGS,r=4,s){if(!e)return null;const o=Object(Le["c"])(e,t,i,n,a,r);if(o.success){const i=[];if(o.ifd.forEach(e=>{e.values||i.push(e)}),i.length>0){const a=i.map(e=>e.offlineOffsetSize),r=Math.min.apply(null,a.map(e=>e[0]));if(Math.min.apply(null,a.map(e=>e[0]+e[1]))-r<=this._bufferSize){const{data:a}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:s});e=a,n=r,i.forEach(i=>Object(Le["d"])(e,t,i,n))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),a=i.values;if(a&&a.length>4){const r=a[0]+"."+a[1]+"."+a[2],o=await this.readIFD(e,t,i.valueOffset+6-n,n,He["a"].GEO_KEYS,2,s);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,n,He["a"].TIFF_TAGS,4,s)}}getTileLocation(e,t,i){const{firstPyramidLevel:n,blockBoundary:a}=this.rasterInfo.storageInfo,r=0===e?0:e-(n-1),s=this._headerInfo.ifds[r];if(!s)return null;const o=Object(Le["g"])(s,this._headerInfo),l=Je(s,"TILEOFFSETS");if(void 0===l)return null;const c=Je(s,"TILEBYTECOUNTS"),{minRow:u,minCol:f,maxRow:h,maxCol:d}=a[r];if(t>h||i>d||t<u||i<f)return null;const m=qe(s,"IMAGEWIDTH"),p=qe(s,"IMAGELENGTH"),y=qe(s,"TILEWIDTH"),b=qe(s,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,g=x*t*(d+1)+i,v=[{from:l[g],to:l[g+x-1]+c[g+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[g+t]+c[g+t]!==l[g+t+1]){e=!1;break}if(!e)for(let t=0;t<x;t++)v[t]={from:l[g+t],to:l[g+t]+c[g+t]-1}}const O=l[g],w=c[g];return null==O||null==w?null:{ranges:v,ifd:s,actualTileWidth:i===d?m%y:y,actualTileHeight:t===h?p%b:b}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Se(t)}catch{return null}}};Object(n["a"])([Object(u["b"])()],We.prototype,"_files",void 0),Object(n["a"])([Object(u["b"])()],We.prototype,"_headerInfo",void 0),Object(n["a"])([Object(u["b"])()],We.prototype,"_bufferSize",void 0),Object(n["a"])([Object(u["b"])({type:String,json:{write:!0}})],We.prototype,"datasetFormat",void 0),We=Object(n["a"])([Object(m["a"])("esri.layers.support.rasterDatasets.TIFFRaster")],We);const $e=We,Ue=new Map;Ue.set("CRF",{desc:"Cloud Raster Format",constructor:ce}),Ue.set("MRF",{desc:"Meta Raster Format",constructor:Ee}),Ue.set("TIFF",{desc:"GeoTIFF",constructor:$e}),Ue.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Fe}),Ue.set("JPG",{desc:"JPG Raster Format",constructor:Re}),Ue.set("PNG",{desc:"PNG Raster Format",constructor:Re}),Ue.set("GIF",{desc:"GIF Raster Format",constructor:Re}),Ue.set("BMP",{desc:"BMP Raster Format",constructor:Re});class Ge{static get supportedFormats(){const e=new Set;return Ue.forEach((t,i)=>e.add(i)),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let a=e.datasetFormat;null==a&&t.lastIndexOf(".")&&(a=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(a="RasterTileServer");const r={url:t,sourceJSON:n,datasetFormat:a,ioConfig:i||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(a))return o=Ue.get(a).constructor,l=new o(r),await l.open({signal:e.signal}),l;if(a)throw new s["a"]("rasterfactory:open","not a supported format "+a);const c=Array.from(Ue.keys());let u=0;const f=function(){return a=c[u++],a?(o=Ue.get(a).constructor,l=new o(r),l.open({signal:e.signal}).then(()=>l).catch(()=>f())):null};return f()}static register(e,t,i){Ue.has(e.toUpperCase())||Ue.set(e.toUpperCase(),{desc:t,constructor:i})}}var Ve=i("f51b");let Xe=class extends(Object(y["a"])(Object(N["a"])(Object(D["a"])(Object(B["a"])(Object(b["a"])(z(Object(E["a"])(Object(A["a"])(Object(l["a"])(p["a"])))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(o["l"])(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c["t"]).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new L["a"]({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields,a="Raster.";if(n){const e=n.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{const t=e.clone();return t.name=a+e.name,t});i=i.concat(e)}const r=this.rasterInfo.dataType;if(("vector-magdir"===r||"vector-uv"===r)&&Object(o["l"])(this.rasterInfo.multidimensionalInfo)){var s;const e=null==(s=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:s.trim(),t="Magnitude"+(e?` (${e})`:"");i.push(new L["a"]({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),i.push(new L["a"]({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,a=Object(r["b"])(n,i)||void 0;if(null!=a)return a}createPopupTemplate(e){return Object(Ve["a"])({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new s["a"]("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await Ge.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new s["a"]("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText),this.sourceJSON.timeInfo&&this._set("timeInfo",J["a"].fromJSON(this.sourceJSON.timeInfo))),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",e=>this.raster.ioConfig.customFetchParameters=e)}};Object(n["a"])([Object(u["b"])({type:[f["a"]],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],Xe.prototype,"bandIds",void 0),Object(n["a"])([Object(u["b"])({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),Object(h["a"])(H["a"])],Xe.prototype,"interpolation",void 0),Object(n["a"])([Object(u["b"])({json:{write:!0}})],Xe.prototype,"multidimensionalDefinition",void 0),Object(n["a"])([Object(u["b"])(I["e"])],Xe.prototype,"legendEnabled",void 0),Object(n["a"])([Object(u["b"])({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Xe.prototype,"isReference",void 0),Object(n["a"])([Object(u["b"])({type:["show","hide"]})],Xe.prototype,"listMode",void 0),Object(n["a"])([Object(u["b"])()],Xe.prototype,"sourceJSON",void 0),Object(n["a"])([Object(u["b"])({readOnly:!0})],Xe.prototype,"version",void 0),Object(n["a"])([Object(u["b"])()],Xe.prototype,"title",void 0),Object(n["a"])([Object(u["b"])({readOnly:!0,json:{read:!1}})],Xe.prototype,"type",void 0),Object(n["a"])([Object(u["b"])({type:["ArcGISTiledImageServiceLayer"]})],Xe.prototype,"operationalLayerType",void 0),Object(n["a"])([Object(u["b"])({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],Xe.prototype,"popupEnabled",void 0),Object(n["a"])([Object(u["b"])({type:a["a"],json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Xe.prototype,"popupTemplate",void 0),Object(n["a"])([Object(u["b"])({readOnly:!0})],Xe.prototype,"defaultPopupTemplate",null),Object(n["a"])([Object(u["b"])({readOnly:!0,type:[L["a"]]})],Xe.prototype,"fields",void 0),Object(n["a"])([Object(u["b"])({readOnly:!0,type:[L["a"]]})],Xe.prototype,"rasterFields",null),Object(n["a"])([Object(u["b"])({types:r["a"],json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:r["c"],name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"animated-flow"!==e.type})}}}}})],Xe.prototype,"renderer",null),Object(n["a"])([Object(d["a"])("renderer")],Xe.prototype,"readRenderer",null),Xe=Object(n["a"])([Object(m["a"])("esri.layers.ImageryTileLayer")],Xe);const Ye=Xe},ab68:function(e,t,i){"use strict";i.d(t,"a",(function(){return r})),i.d(t,"b",(function(){return a}));var n=i("dff3");const a={type:n["a"],json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,a){if(!e)return null;const{minScale:r,maxScale:s,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return a&&a.ignoreMinMaxLOD?n["a"].fromJSON(e):n["a"].fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=o&&e<=l)});if(0!==r&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,a=s?t(s):-1/0;return n["a"].fromJSON({...e,lods:e.lods.filter(e=>{const n=t(e.scale);return n<=i&&n>=a})})}return n["a"].fromJSON(e)}},b4e0:function(e,t,i){"use strict";i.d(t,"a",(function(){return B})),i.d(t,"b",(function(){return x})),i.d(t,"c",(function(){return k})),i.d(t,"d",(function(){return M})),i.d(t,"e",(function(){return T})),i.d(t,"f",(function(){return C})),i.d(t,"g",(function(){return b})),i.d(t,"h",(function(){return j})),i.d(t,"i",(function(){return O})),i.d(t,"j",(function(){return g})),i.d(t,"k",(function(){return u})),i.d(t,"l",(function(){return z})),i.d(t,"m",(function(){return D}));i("e06a");var n=i("ce50"),a=i("b2b2"),r=i("8048"),s=i("8188"),o=i("3af1"),l=i("4ae5");const c=5e-4;function u(e,t,i){return!Object(s["a"])(e,t,i)}function f(e,t,i){const a=u(e,t,i);if(a&&!Object(s["f"])())throw new n["a"]("rasterprojectionhelper-project","projection engine is not loaded");return a}const h=function(e,t,i){const n=(e[0]+e[4]+e[4*t.cols]+e[4*t.cols+4])/4,a=(e[1]+e[5]+e[4*t.rows+1]+e[4*t.rows+5])/4,r=(e[4*t.cols]-e[0]+e[4*t.cols+4]-e[4])/i[0]*.5,s=(e[4*t.cols+1]-e[1]+e[4*t.cols+5]-e[5])/i[1]*.5;return[0===r||isNaN(r)?0:Math.abs(n-e[2*t.rows+2])/Math.abs(r),0===s||isNaN(s)?0:Math.abs(a-e[2*t.rows+3])/Math.abs(s)]},d={3395:20037508.342789244,3410:17334193.943686873,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53034:20015086.79602057,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54034:20037508.342789244,54079:20037508.342789244,54080:20037508.342789244,54100:20037508.342789244,54101:20037508.342789244},m=32,p=4,y=p;async function b(){if(Object(s["f"])())return null;await Object(s["g"])()}function x(e,t,i){return f(e.spatialReference,t)?i?Object(s["d"])(t,e.spatialReference,e):Object(s["d"])(e.spatialReference,t,e):null}function g(e,t,i,n=null){if(e.spatialReference.equals(t))return e;f(e.spatialReference,t,n);const r=i.center,l=new o["a"]({xmin:r.x-e.x/2,xmax:r.x+e.x/2,ymin:r.y-e.y/2,ymax:r.y+e.y/2,spatialReference:e.spatialReference}),c=Object(s["i"])(l,t,n);return Object(a["k"])(c)?null:{x:c.xmax-c.xmin,y:c.ymax-c.ymin}}function v(e,t=.01){return Object(r["d"])(e)?t/Object(r["d"])(e):0}function O(e,t,i=null,n=!0){const a=e.spatialReference;if(a.equals(t))return e;f(a,t,i);const r=Object(s["i"])(e,t,i);if(n&&t.isGeographic){const[t,i]=R(a,!0),n=v(a);n&&null!=t&&null!=i&&(Math.abs(e.x-t)<n&&Math.abs(180-r.x)<c?r.x-=360:Math.abs(e.x-i)<n&&Math.abs(180+r.x)<c&&(r.x+=360))}return r}function w(e,t,i=null){const n=e[0].spatialReference;return n.equals(t)?e:(f(n,t,i),Object(s["i"])(e,t,i))}function I(e){const t=T(e[0].spatialReference);if(e.length<2||!Object(a["l"])(t))return e[0];let{xmin:i,xmax:n,ymin:r,ymax:s}=e[0];for(let a=1;a<e.length;a++){const i=e[a];n=i.xmax+t*a,r=Math.min(r,i.ymin),s=Math.max(s,i.ymax)}return new o["a"]({xmin:i,xmax:n,ymin:r,ymax:s,spatialReference:e[0].spatialReference})}function j(e,t,i=null,n=!0){if(e.spatialReference.equals(t))return e;const r=C(e),s=T(e.spatialReference,!0);return Object(a["l"])(s)&&0!==r?I(e.clone().normalize().map(e=>S(e,t,i,n))):S(e,t,i,n)}function S(e,t,i=null,n=!0){const a=e.spatialReference;if(a.equals(t))return e;f(a,t,i);const r=Object(s["i"])(e,t,i);let[o,u]=R(a,!0);if(r&&n&&a.isWebMercator&&t.isGeographic&&null!=o&&null!=u){const n=.001,s=1e3;if(Math.abs(e.xmin-o)<n&&Math.abs(u-e.xmax)>s&&Math.abs(180-r.xmax)<c){r.xmin=-180;const n=[];n.push(new l["a"](e.xmax,e.ymin,a)),n.push(new l["a"](e.xmax,(e.ymin+e.ymax)/2,a)),n.push(new l["a"](e.xmax,e.ymax,a));const s=n.map(e=>O(e,t,i)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);r.xmax=Math.max.apply(null,s)}if(Math.abs(e.xmax-u)<n&&Math.abs(o-e.xmin)>s&&Math.abs(180+r.xmin)<c){r.xmax=180;const n=[];n.push(new l["a"](e.xmin,e.ymin,a)),n.push(new l["a"](e.xmin,(e.ymin+e.ymax)/2,a)),n.push(new l["a"](e.xmin,e.ymax,a));const s=n.map(e=>O(e,t,i)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);r.xmin=Math.min.apply(null,s)}}[o,u]=R(t,!0);const h=v(t);return h&&null!=o&&null!=u&&r&&(Math.abs(r.xmin-o)<h&&(r.xmin=o),Math.abs(r.xmax-u)<h&&(r.xmax=u)),r}function T(e,t=!1){const i=t?20037508.342787:20037508.342788905;return e.isWebMercator?2*i:e.wkid&&e.isGeographic?360:2*d[e.wkid]||null}function R(e,t=!1){const i=[],n=T(e,t);return Object(a["l"])(n)&&(i.push(-n/2),i.push(n/2)),i}function _(e,t,i,n){let a=(e-t)/i;return a-Math.floor(a)!=0?a=Math.floor(a):n&&(a-=1),a}function C(e,t=!1){const i=T(e.spatialReference);if(!Object(a["l"])(i))return 0;const n=t?0:-i/2;return _(e.xmax,n,i,!0)-_(e.xmin,n,i,!1)}function M(e){const t=e.storageInfo.origin.x,i=T(e.spatialReference,!0);if(!Object(a["l"])(i))return{originX:t,halfWorldWidth:null,pyramidsInfo:null};const n=i/2,{nativePixelSize:r,storageInfo:s,extent:o}=e,{maximumPyramidLevel:l,blockWidth:c,pyramidScalingFactor:u}=s;let f=r.x;const h=[],d=Object(a["l"])(e.transform)&&"gcs-shift"===e.transform.type,m=t+(d?0:n),p=d?i-t:n-t;for(let a=0;a<=l;a++){const e=(o.xmax-t)/f/c,i=e-Math.floor(e)==0?e:Math.ceil(e),n=p/f/c,a=n-Math.floor(n)==0?n:Math.ceil(n),r=Math.floor(m/f/c),s=Math.round(m/f)%c,l=(c-Math.round(p/f)%c)%c;h.push({resolutionX:f,blockWidth:c,datsetColumnCount:i,worldColumnCountFromOrigin:a,leftMargin:s,rightPadding:l,originColumnOffset:r}),f*=u}return{originX:t,halfWorldWidth:n,pyramidsInfo:h,hasGCSSShiftTransform:d}}function k(e){const t=e.isAdaptive&&null==e.spacing,i=e.spacing||[m,m];let n=P(e),a={cols:n.size[0]+1,rows:n.size[1]+1},r=h(n.offsets,a,i);const s=(r[0]+r[1])/2,o=n.outofBoundPointCount>0&&n.outofBoundPointCount<n.offsets.length/2;return t&&(o||s>y)&&(n=P({...e,spacing:[p,p]}),a={cols:n.size[0]+1,rows:n.size[1]+1},r=h(n.offsets,a,i)),n.error=r,n.coefficients=F(n.offsets,a,o),n}function P(e){const{projectedExtent:t,srcBufferExtent:i,pixelSize:n,datumTransformation:r,rasterTransform:s}=e,o=t.spatialReference,c=i.spatialReference;f(o,c);const{xmin:u,ymin:h,xmax:d,ymax:p}=t,y=T(c),b=e.hasWrapAround||"gcs-shift"===(null==s?void 0:s.type),x=e.spacing||[m,m],g={x:x[0]*n.x,y:x[1]*n.y},v={cols:Math.ceil((d-u)/g.x-.1/x[0])+1,rows:Math.ceil((p-h)/g.y-.1/x[1])+1},O=g.x,I=g.y,j=[];let S,R=0;const _=[];for(let a=0;a<v.cols;a++)for(let e=0;e<v.rows;e++)_.push(new l["a"]({x:u+O*a,y:p-I*e,spatialReference:o}));const C=w(_,c,r);for(let l=0;l<v.cols;l++){const e=[];for(let t=0;t<v.rows;t++){let n=C[l*v.rows+t];s&&(n=s.inverseTransform(n)),e.push(n),l>0&&b&&n&&S[t]&&Object(a["l"])(y)&&n.x<S[t].x&&(n.x+=y),n?(j.push((n.x-i.xmin)/(i.xmax-i.xmin)),j.push((i.ymax-n.y)/(i.ymax-i.ymin))):(j.push(NaN),j.push(NaN),R++)}S=e}return{offsets:j,error:null,coefficients:null,outofBoundPointCount:R,spacing:x,size:[v.cols-1,v.rows-1]}}function F(e,t,i){const{cols:n,rows:a}=t,r=new Float32Array((n-1)*(a-1)*2*6),s=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),o=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let l=0;l<n-1;l++){for(let t=0;t<a-1;t++){let i=l*a*2+2*t;const c=e[i],u=e[i+1],f=e[i+2],h=e[i+3];i+=2*a;const d=e[i],m=e[i+1],p=e[i+2],y=e[i+3];let b=0,x=12*(t*(n-1)+l);for(let e=0;e<3;e++)r[x++]=s[b++]*c+s[b++]*f+s[b++]*p;b=0;for(let e=0;e<3;e++)r[x++]=s[b++]*u+s[b++]*h+s[b++]*y;b=0;for(let e=0;e<3;e++)r[x++]=o[b++]*c+o[b++]*d+o[b++]*p;b=0;for(let e=0;e<3;e++)r[x++]=o[b++]*u+o[b++]*m+o[b++]*y}if(i)for(let e=0;e<r.length;e++)isNaN(r[e])&&(r[e]=-1)}return r}function z(e){const t=e.clone().normalize();return 1===t.length?t[0]:I(t)}function D(e,t,i){const{storageInfo:n,pixelSize:r}=t;let s,o=!1;const{pyramidResolutions:c}=n;if(Object(a["l"])(c)&&c.length){const n=(e.x+e.y)/2,a=c[c.length-1],u=(a.x+a.y)/2,f=(r.x+r.y)/2;if(n<=f)s=0;else if(n>=u)s=c.length,o=n/u>8;else{let e,t=f;for(let a=1;a<=c.length;a++){if(e=(c[a-1].x+c[a-1].y)/2,n<=e){n===e?s=a:"down"===i?(s=a-1,o=n/t>8):s="up"===i||n-t>e-n||n/t>2?a:a-1;break}t=e}}const h=0===s?r:c[s-1];return{pyramidLevel:s,pyramidResolution:new l["a"]({x:h.x,y:h.y,spatialReference:t.spatialReference}),excessiveReading:o}}const u=Math.log(e.x/r.x)/Math.LN2,f=Math.log(e.y/r.y)/Math.LN2,h=t.storageInfo.maximumPyramidLevel||0;s="down"===i?Math.floor(Math.min(u,f)):"up"===i?Math.ceil(Math.max(u,f)):Math.round((u+f)/2),s<0?s=0:s>h&&(o=s>h+3,s=h);const d=2**s;return{pyramidLevel:s,pyramidResolution:new l["a"]({x:d*t.nativePixelSize.x,y:d*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:o}}function B(e,t,i=512,n=!0){const{extent:a,spatialReference:s,pixelSize:o}=e,c=g(new l["a"]({x:o.x,y:o.y,spatialReference:s}),t,a);if(null==c)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const u=(c.x+c.y)/2,f=Object(r["d"])(t),h=u*f*96*39.37,d=t.isGeographic?256/i*295828763.7958547:256/i*591657527.591555;let m="vector-magdir"===e.dataType||"vector-uv"===e.dataType;const p=j(a,t);m||n&&(t.isGeographic||t.isWebMercator)&&(m=p.xmin*p.xmax<0);let y,b=h;const x=1.001;if(m){b=d;const e=t.isGeographic?1341104507446289e-21:.29858214164761665,i=e*(96*f*39.37),n=t.isGeographic?4326:3857;y=g(new l["a"]({x:e,y:e,spatialReference:{wkid:n}}),s,p),y.x*=b/i,y.y*=b/i}else{y={x:o.x,y:o.y};const t=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let i=0;for(;b<d*(x/2)&&i<t;)i++,b*=2,y.x*=2,y.y*=2;Math.max(b,d)/Math.min(b,d)<=x&&(b=d)}const v=[b],O=[{x:y.x,y:y.y}],w=70.5310735,I=Math.min(w,h)/x;for(;b>=I;)b/=2,y.x/=2,y.y/=2,v.push(b),O.push({x:y.x,y:y.y});return{projectedPixelSize:c,scales:v,srcResolutions:O,isCustomTilingScheme:!m}}}}]);
//# sourceMappingURL=chunk-749eb15a.63260735.js.map